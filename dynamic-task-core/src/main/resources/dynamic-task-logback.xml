<?xml version="1.0" encoding="UTF-8"?>
<!-- Logback 配置根元素 -->
<configuration>
    
<!--    &lt;!&ndash; 控制台输出配置 &ndash;&gt;-->
<!--    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        <encoder>-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->
    
    <!-- 自定义线程业务日志文件输出配置 -->
    <appender name="THREAD_INPUT_FILE" class="cn.pug.dynamic.task.core.executor.logging.ThreadInputFileAppender">
    </appender>

    <!-- 默认文件日志输出配置 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 主日志文件路径 -->
        <file>${LOG.PATH}/application.log</file>
        
        <!-- 基于时间和大小的滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天滚动一次，并按大小分割 -->
            <fileNamePattern>${LOG.PATH}/application.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            
            <!-- 文件分割策略：当日志达到100MB时触发新文件生成 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            
            <!-- 保留最近30天的日志文件 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        
        <encoder>
            <!-- 同样的标准日志格式 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    
    <!-- 根日志级别设置 -->
    <root level="INFO">
        <!-- 将日志输出到控制台、主文件、线程业务文件和MinIO Appender -->
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="FILE" />
        <appender-ref ref="THREAD_INPUT_FILE" />
    </root>
    
    <!-- 应用特定日志级别设置 -->
    <logger name="cn.pug" level="DEBUG" />
    <!-- 对 cn.pug 包下的日志记录启用 DEBUG 级别，便于更详细的调试信息输出 -->
    
</configuration>